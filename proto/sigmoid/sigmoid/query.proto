syntax = "proto3";

package sigmoid.sigmoid;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "sigmoid/sigmoid/params.proto";
import "sigmoid/sigmoid/tx.proto";
import "sigmoid/sigmoid/request.proto";

option go_package = "sigmoid/x/sigmoid/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sigmoid/sigmoid/params";
  
  }
  
  // Queries a list of GetAmount items.
  rpc GetAmount (QueryGetAmountRequest) returns (QueryGetAmountResponse) {
    option (google.api.http).get = "/sigmoid/sigmoid/get_amount/{senderAddress}";
  
  }
  
  // Queries a list of GetLastProcessed items.
  rpc GetLastProcessed (QueryGetLastProcessedRequest) returns (QueryGetLastProcessedResponse) {
    option (google.api.http).get = "/sigmoid/sigmoid/get_last_processed";
  
  }
  
  // Queries a list of GetPendingUnstakeRequest items.
  rpc GetPendingUnstakeRequest (QueryGetPendingUnstakeRequestRequest) returns (QueryGetPendingUnstakeRequestResponse) {
    option (google.api.http).get = "/sigmoid/sigmoid/get_pending_unstake_request";
  
  }
  
  // Queries a list of GetRaoStakedBalance items.
  rpc GetRaoStakedBalance (QueryGetRaoStakedBalanceRequest) returns (QueryGetRaoStakedBalanceResponse) {
    option (google.api.http).get = "/sigmoid/sigmoid/get_rao_staked_balance";
  
  }
  
  // Queries a list of GetSigtaoRateD items.
  rpc GetSigtaoRateD (QueryGetSigtaoRateDRequest) returns (QueryGetSigtaoRateDResponse) {
    option (google.api.http).get = "/sigmoid/sigmoid/get_sigtao_rate_d";
  
  }
  
  // Queries a list of GetPendingBridgeRequest items.
  rpc GetPendingBridgeRequest (QueryGetPendingBridgeRequestRequest) returns (QueryGetPendingBridgeRequestResponse) {
    option (google.api.http).get = "/sigmoid/sigmoid/get_pending_bridge_request";
  
  }
  
  // Queries a list of GetLatestProcessedEthBlock items.
  rpc GetLatestProcessedEthBlock (QueryGetLatestProcessedEthBlockRequest) returns (QueryGetLatestProcessedEthBlockResponse) {
    option (google.api.http).get = "/sigmoid/sigmoid/get_latest_processed_eth_block";
  
  }
  
  // Queries a list of GetFrontPendingStakeRequest items.
  rpc GetFrontPendingStakeRequest (QueryGetFrontPendingStakeRequestRequest) returns (QueryGetFrontPendingStakeRequestResponse) {
    option (google.api.http).get = "/sigmoid/sigmoid/get_front_pending_stake_request/{address}";
  
  }
  
  // Queries a list of GetFrontPendingUnstakeRequest items.
  rpc GetFrontPendingUnstakeRequest (QueryGetFrontPendingUnstakeRequestRequest) returns (QueryGetFrontPendingUnstakeRequestResponse) {
    option (google.api.http).get = "/sigmoid/sigmoid/get_front_pending_unstake_request/{address}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetAmountRequest {
  string senderAddress = 1;
}

message QueryGetAmountResponse {
  uint64 amount = 1;
}

message QueryGetLastProcessedRequest {}

message QueryGetLastProcessedResponse {
  string transactionId = 1;
}

message QueryGetPendingUnstakeRequestRequest {}

message QueryGetPendingUnstakeRequestResponse {
  MsgCreateUnstakeRequest request = 1;
}

message QueryGetRaoStakedBalanceRequest {}

message QueryGetRaoStakedBalanceResponse {
  uint64 raoStakedBalance = 1;
}

message QueryGetSigtaoRateDRequest {}

message QueryGetSigtaoRateDResponse {
  uint64 sigtaoRateD = 1;
}

message QueryGetPendingBridgeRequestRequest {}

message QueryGetPendingBridgeRequestResponse {
  MsgCreateBridgeRequest request = 1;
}

message QueryGetLatestProcessedEthBlockRequest {}

message QueryGetLatestProcessedEthBlockResponse {
  string blockNumber = 1;
}

message QueryGetFrontPendingStakeRequestRequest {
  string address = 1;
}

message QueryGetFrontPendingStakeRequestResponse {
  Request request = 1;
}

message QueryGetFrontPendingUnstakeRequestRequest {
  string address = 1;
}

message QueryGetFrontPendingUnstakeRequestResponse {
  Request request = 1;
}

